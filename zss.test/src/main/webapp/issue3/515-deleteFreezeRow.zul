<zk>
		<label multiline="true">
			click each button horizontally, it shouldn't cause javascript exception.
		</label>
		<vlayout hflex="1" vflex="1">
			<!-- <hlayout>
				2007 xls format <button label="export" onClick="export(ss2);"></button>
			</hlayout> -->
			<hlayout>
				<button onClick="run(ss2, 1)">1. change row 2's height</button>
				<button onClick="run(ss2, 2)">2. freeze one row</button>
				<button onClick="run(ss2, 3)">3. remove row 1</button>
				<button onClick="run(ss2, 4)">4. insert one row on row 1</button>
				<button onClick="run(ss2, 5)">1. change row 1's height</button>
			</hlayout>
			<hlayout>
				<button onClick="run(ss2, 11)">1. change column B's width</button>
				<button onClick="run(ss2, 12)">2. freeze one column</button>
				<button onClick="run(ss2, 13)">3. remove column 1</button>
				<button onClick="run(ss2, 14)">4. insert one column on column A</button>
				<button onClick="run(ss2, 15)">1. change column A's width</button>
			</hlayout>
			
			<spreadsheet id="ss2" src="/issue3/book/515-deleteFreezeRow.xlsx" maxVisibleRows="200" maxVisibleColumns="40" hflex="1"
				vflex="true" showContextMenu="true" showSheetbar="true" showToolbar="true" 
				showFormulabar="true"/>
		</vlayout>
	
	<zscript><![CDATA[
		public void run(Spreadsheet s, int step) {
			Sheet sheet = s.getSelectedSheet();
			if(step == 1) {
				Ranges.range(sheet, "2").toRowRange().setRowHeight(50);
			} else if(step == 2) {
				Ranges.range(sheet).setFreezePanel(1, 0);
			} else if(step == 3) {
				Ranges.range(sheet, "1").toRowRange().delete(org.zkoss.zss.api.Range.DeleteShift.DEFAULT);
			} else if (step == 4) {
				Ranges.range(sheet, "1").toRowRange().insert(org.zkoss.zss.api.Range.InsertShift.DEFAULT, org.zkoss.zss.api.Range.InsertCopyOrigin.FORMAT_LEFT_ABOVE);
			} else if (step == 5) {
				Ranges.range(sheet, "1").toRowRange().setRowHeight(100);
			} else if(step == 11) {
				Ranges.range(sheet, "B").toColumnRange().setColumnWidth(100);
			} else if(step == 12) {
				Ranges.range(sheet).setFreezePanel(0, 1);
			} else if(step == 13) {
				Ranges.range(sheet, "A").toColumnRange().delete(org.zkoss.zss.api.Range.DeleteShift.DEFAULT);
			} else if (step == 14) {
				Ranges.range(sheet, "A").toColumnRange().insert(org.zkoss.zss.api.Range.InsertShift.DEFAULT, org.zkoss.zss.api.Range.InsertCopyOrigin.FORMAT_LEFT_ABOVE);
			} else if(step == 15) {
				Ranges.range(sheet, "A").toColumnRange().setColumnWidth(150);
			}
		}
		public void export(Spreadsheet s) {
			Book book = s.getBook();
			String fileName = (book.getType() == org.zkoss.zss.api.model.Book.BookType.XLS) ? "exported.xls" : "exported.xlsx";
			Exporter exporter = Exporters.getExporter();
			java.io.ByteArrayOutputStream os = new java.io.ByteArrayOutputStream();
			exporter.export(book, os);
			os.close();
			org.zkoss.zul.Filedownload.save(os.toByteArray(), "application/octet-stream", fileName);
		}
	]]></zscript>

</zk>
